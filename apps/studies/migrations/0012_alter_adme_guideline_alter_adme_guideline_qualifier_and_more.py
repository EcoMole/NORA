# Generated by Django 4.2.14 on 2024-11-05 09:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        (
            "taxonomies",
            "0008_alter_population_qualifier_alter_population_subgroup_and_more",
        ),
        ("studies", "0011_alter_endpointstudy_species"),
    ]

    operations = [
        migrations.AlterField(
            model_name="adme",
            name="guideline",
            field=models.ForeignKey(
                blank=True,
                help_text="(STUDYGUIDELINE vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "STUDYGUIDELINE"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="guideline_admes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="adme",
            name="guideline_qualifier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="guideline_qualifier_admes",
                to="taxonomies.guidelinequalifier",
            ),
        ),
        migrations.AlterField(
            model_name="adme",
            name="study_source",
            field=models.ForeignKey(
                blank=True,
                db_column="id_study_source",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="study_source_admes",
                to="studies.studysource",
            ),
        ),
        migrations.AlterField(
            model_name="adme",
            name="test_type",
            field=models.ForeignKey(
                blank=True,
                db_column="assay_system_endpoint",
                help_text="for ex.: in silico, in vitro, in vivo, human study etc. (TEST_TYPE vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "TEST_TYPE"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="test_type_admes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="admeinvestigationtype",
            name="investigation_type",
            field=models.ForeignKey(
                db_column="id_investigation_type",
                on_delete=django.db.models.deletion.PROTECT,
                to="studies.investigationtype",
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="qualifier",
            field=models.ForeignKey(
                blank=True,
                db_column="id_qualifier",
                help_text="(QUALIFIER vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "QUALIFIER"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="qualifier_endpoints",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="reference_point",
            field=models.ForeignKey(
                blank=True,
                db_column="id_reference_point",
                help_text="(ENDPOINT_HGV vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "ENDPOINT_HGV"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="endpoint_endpoints",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="subpopulation",
            field=models.ForeignKey(
                blank=True,
                db_column="id_subpopulation",
                help_text="value such as 'male', 'female', 'mothers', 'fetuses', 'offsprings' are stored here. (MTX vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "MTX"),
                    models.Q(("short_name", "root"), _negated=True),
                    models.Q(
                        ("is_gender", True),
                        (
                            "extended_name",
                            "Fetus / stillbirth / neonatus (as part-nature)",
                        ),
                        _connector="OR",
                    ),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="subpopulation_endpoints",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                db_column="id_unit",
                help_text="use full name (e.g. 'gram' not 'g'). (UNIT vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "UNIT"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="unit_endpoints",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="duration_unit",
            field=models.ForeignKey(
                blank=True,
                db_column="id_duration_unit",
                help_text="use full name (e.g. 'gram' not 'g'). (UNIT vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "UNIT"),
                    ("extended_name__in", ["Hour", "Day", "Week", "Month", "Year"]),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="duration_unit_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="guideline",
            field=models.ForeignKey(
                blank=True,
                db_column="id_guideline",
                help_text="(STUDYGUIDELINE vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "STUDYGUIDELINE"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="guideline_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="guideline_qualifier",
            field=models.ForeignKey(
                blank=True,
                db_column="id_guideline_qualifier",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="guideline_qualifier_endpointstudies",
                to="taxonomies.guidelinequalifier",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="sex",
            field=models.ForeignKey(
                blank=True,
                db_column="id_sex",
                help_text="(MTX vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "MTX"),
                    models.Q(("short_name", "root"), _negated=True),
                    ("is_gender", True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sex_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="species",
            field=models.ForeignKey(
                blank=True,
                db_column="id_species",
                help_text="(MTX vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "MTX"),
                    models.Q(
                        ("extended_name__icontains", "(as animal)"),
                        ("extended_name__icontains", "(as organism)"),
                        ("short_name__icontains", "(as animal)"),
                        ("short_name__icontains", "(as organism)"),
                        _connector="OR",
                    ),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="species_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="study_source",
            field=models.ForeignKey(
                blank=True,
                db_column="id_study_source",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="study_source_endpointstudies",
                to="studies.studysource",
            ),
        ),
        migrations.AlterField(
            model_name="endpointstudy",
            name="test_type",
            field=models.ForeignKey(
                blank=True,
                db_column="id_test_type",
                help_text="for ex.: acute oral toxicity (OECD phrase ID 1703), or subchronic (OECD phrase ID 2399) (TEST_TYPE vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "TEST_TYPE"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="test_type_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="finaloutcome",
            name="outcome",
            field=models.ForeignKey(
                blank=True,
                db_column="id_assessment_type",
                help_text="(ENDPOINT_HGV vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "ENDPOINT_HGV"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="outcome_final_outcomes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="finaloutcome",
            name="qualifier",
            field=models.ForeignKey(
                blank=True,
                db_column="id_risk_qualifier",
                help_text="(QUALIFIER vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "QUALIFIER"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="qualifier_final_outcomes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="finaloutcome",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                db_column="id_risk_unit",
                help_text="use full name (e.g. 'gram' not 'g'). (UNIT vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "UNIT"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="unit_final_outcomes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="finaloutcomepopulation",
            name="population",
            field=models.ForeignKey(
                blank=True,
                db_column="id_age",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="population_outcome_populations",
                to="taxonomies.population",
            ),
        ),
        migrations.AlterField(
            model_name="genotox",
            name="guideline",
            field=models.ForeignKey(
                blank=True,
                db_column="id_genotox_guideline",
                help_text="(STUDYGUIDELINE vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "STUDYGUIDELINE"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="guideline_genotoxes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="genotox",
            name="guideline_qualifier",
            field=models.ForeignKey(
                blank=True,
                db_column="id_guideline_qualifier",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="guideline_qualifier_genotoxes",
                to="taxonomies.guidelinequalifier",
            ),
        ),
        migrations.AlterField(
            model_name="genotox",
            name="outcome",
            field=models.ForeignKey(
                blank=True,
                db_column="id_is_genotoxic",
                help_text="(POSNEG vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "POSNEG"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="outcome_genotoxes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="genotox",
            name="study_source",
            field=models.ForeignKey(
                blank=True,
                db_column="id_study_source",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="study_source_genotoxes",
                to="studies.studysource",
            ),
        ),
        migrations.AlterField(
            model_name="genotox",
            name="test_type",
            field=models.ForeignKey(
                blank=True,
                db_column="id_test_type",
                help_text="for ex.: acute oral toxicity (OECD phrase ID 1703), or subchronic (OECD phrase ID 2399). (TEST_TYPE vocab)",
                limit_choices_to=models.Q(
                    ("taxonomy__code", "TEST_TYPE"),
                    models.Q(("short_name", "root"), _negated=True),
                ),
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="test_type_genotoxes",
                to="taxonomies.taxonomynode",
            ),
        ),
    ]
