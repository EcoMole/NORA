# Generated by Django 4.2.13 on 2024-06-04 13:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("novel_food", "0001_initial"),
        ("taxonomies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ADME",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_pktkade", primary_key=True, serialize=False
                    ),
                ),
                (
                    "remarks",
                    models.TextField(
                        blank=True,
                        db_column="study_comment",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "test_material",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "guideline",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"taxonomy__code": "GUIDELINE"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guideline_admes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "guideline_qualifier",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"taxonomy__code": "QUALIFIER"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guideline_qualifier_admes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "novel_food",
                    models.ForeignKey(
                        db_column="pktkade_study",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="novel_food.novelfood",
                    ),
                ),
            ],
            options={
                "verbose_name": "ADME",
                "verbose_name_plural": "ADMEs",
                "db_table": "PKTK",
            },
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_assess", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(db_column="assessment", max_length=255)),
                ("definition", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "ASSESSMENT",
            },
        ),
        migrations.CreateModel(
            name="EndEndstudyOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lovalue", models.FloatField(blank=True, null=True)),
                (
                    "endpoint",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_endpoint",
                        limit_choices_to={"taxonomy__code": "ENDPOINT_HGV"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="endpoint_end_endstudy_outcomes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Endpoint Endpointstudy Outcome",
                "verbose_name_plural": "Endpoint Endpointstudy Outcomes",
                "db_table": "END_ENDSTUDY_HAZARD",
            },
        ),
        migrations.CreateModel(
            name="EndpointStudy",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_tox", primary_key=True, serialize=False
                    ),
                ),
                ("exp_duration", models.FloatField(blank=True, null=True)),
                ("remarks", models.CharField(blank=True, max_length=2000, null=True)),
                (
                    "test_material",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "duration_unit",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_duration_unit",
                        help_text="UNIT Catalogue",
                        limit_choices_to={"taxonomy__code": "UNIT"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="duration_unit_endpointstudies",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "guideline",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_guideline",
                        limit_choices_to={"taxonomy__code": "GUIDELINE"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guideline_endpointstudies",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "guideline_qualifier",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_guideline_qualifier",
                        limit_choices_to={"taxonomy__code": "QUALIFIER"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guideline_qualifier_endpointstudies",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "novel_food",
                    models.ForeignKey(
                        db_column="id_study",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="novel_food.novelfood",
                    ),
                ),
                (
                    "sex",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_sex",
                        limit_choices_to={"taxonomy__code": "MTX"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sex_endpointstudies",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "species",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_species",
                        limit_choices_to={"taxonomy__code": "MTX"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="species_endpointstudies",
                        to="taxonomies.taxonomynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Endpointstudy",
                "verbose_name_plural": "Endpointstudies",
                "db_table": "ENDPOINTSTUDY",
            },
        ),
        migrations.CreateModel(
            name="Genotox",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_tox", primary_key=True, serialize=False
                    ),
                ),
                (
                    "test_material",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "genotox_guideline",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_genotox_guideline",
                        limit_choices_to={"taxonomy__code": "GUIDELINE"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="genotox_guideline_genotoxes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "guideline_qualifier",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_guideline_qualifier",
                        limit_choices_to={"taxonomy__code": "QUALIFIER"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guideline_qualifier_genotoxes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "novel_food",
                    models.ForeignKey(
                        db_column="id_study",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="novel_food.novelfood",
                    ),
                ),
                (
                    "outcome",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_is_genotoxic",
                        limit_choices_to={"taxonomy__code": "YESNO"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="outcome_genotoxes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Genotox",
                "verbose_name_plural": "Genotoxes",
                "db_table": "GENOTOX",
            },
        ),
        migrations.CreateModel(
            name="Outcome",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_hazard", primary_key=True, serialize=False
                    ),
                ),
                ("value", models.FloatField(db_column="risk_value")),
                ("safety_factor", models.IntegerField()),
                ("remarks", models.CharField(max_length=2000)),
                (
                    "assessment",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_assess",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="studies.assessment",
                    ),
                ),
                (
                    "assessment_type",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_assessment_type",
                        limit_choices_to={"taxonomy__code": "ENDPOINT_HGV"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assessment_type_outcomes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "end_endstudy_outcome",
                    models.ForeignKey(
                        db_column="end_endstudy_hazard",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.endendstudyoutcome",
                    ),
                ),
                (
                    "risk_qualifier",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_risk_qualifier",
                        limit_choices_to={"taxonomy__code": "QUALIFIER"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="risk_qualifier_outcomes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "toxicity_concern",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"taxonomy__code": "YESNO"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="toxicity_concern_outcomes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_risk_unit",
                        help_text="UNIT Catalogue",
                        limit_choices_to={"taxonomy__code": "UNIT"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="unit_outcomes",
                        to="taxonomies.taxonomynode",
                    ),
                ),
            ],
            options={
                "db_table": "HAZARD",
            },
        ),
        migrations.CreateModel(
            name="StudySource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_study_type", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "STUDY_SOURCE",
            },
        ),
        migrations.CreateModel(
            name="StudyType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_study_type", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "STUDY_TYPE",
            },
        ),
        migrations.CreateModel(
            name="SpecificToxicityStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "id_spec_tox",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"taxonomy__code": "TOXICITY"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="id_spec_tox_specific_toxicity_studies",
                        to="taxonomies.taxonomynode",
                    ),
                ),
                (
                    "id_tox",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.endpointstudy",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OutcomePopulation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_hazard_age", primary_key=True, serialize=False
                    ),
                ),
                (
                    "outcome",
                    models.ForeignKey(
                        db_column="id_hazard",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.outcome",
                    ),
                ),
                (
                    "population",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_age",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="population_outcome_populations",
                        to="taxonomies.population",
                    ),
                ),
            ],
            options={
                "db_table": "HAZARD_AGE",
            },
        ),
        migrations.CreateModel(
            name="GenotoxOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hazard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.outcome",
                    ),
                ),
                (
                    "id_tox",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.genotox",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="genotox",
            name="study_source",
            field=models.ForeignKey(
                blank=True,
                db_column="id_study_source",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_source_genotoxes",
                to="studies.studysource",
            ),
        ),
        migrations.AddField(
            model_name="genotox",
            name="test_type",
            field=models.ForeignKey(
                blank=True,
                db_column="id_test_type",
                help_text="for ex.: acute oral toxicity (OECD phrase ID 1703), or "
                "subchronic (OECD phrase ID 2399)",
                limit_choices_to={"taxonomy__code": "TEST_TYPE"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="test_type_genotoxes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddField(
            model_name="genotox",
            name="testing_method",
            field=models.ForeignKey(
                blank=True,
                db_column="id_testing_method",
                help_text="for ex.: in silico, in vitro, in vivo, human study etc.",
                limit_choices_to={"taxonomy__code": "TEST_TYPE"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="testing_method_genotoxes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddField(
            model_name="endpointstudy",
            name="study_source",
            field=models.ForeignKey(
                blank=True,
                db_column="id_study_source",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_source_endpointstudies",
                to="studies.studysource",
            ),
        ),
        migrations.AddField(
            model_name="endpointstudy",
            name="test_type",
            field=models.ForeignKey(
                blank=True,
                db_column="id_test_type",
                help_text="for ex.: acute oral toxicity (OECD phrase ID 1703), or "
                "subchronic (OECD phrase ID 2399)",
                limit_choices_to={"taxonomy__code": "TEST_TYPE"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="test_type_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddField(
            model_name="endpointstudy",
            name="testing_method",
            field=models.ForeignKey(
                blank=True,
                db_column="id_testing_method",
                help_text="for ex.: in silico, in vitro, in vivo, human study etc.",
                limit_choices_to={"taxonomy__code": "TEST_TYPE"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="testing_method_endpointstudies",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddField(
            model_name="endendstudyoutcome",
            name="endpointstudy",
            field=models.ForeignKey(
                db_column="id_tox",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="endpointstudy_end_endstudy_outcomes",
                to="studies.endpointstudy",
            ),
        ),
        migrations.AddField(
            model_name="endendstudyoutcome",
            name="qualifier",
            field=models.ForeignKey(
                blank=True,
                db_column="id_qualifier",
                limit_choices_to={"taxonomy__code": "QUALIFIER"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="qualifier_end_endstudy_outcomes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddField(
            model_name="endendstudyoutcome",
            name="sex",
            field=models.ForeignKey(
                blank=True,
                db_column="id_sex",
                limit_choices_to={"taxonomy__code": "MTX"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sex_end_endstudy_outcomes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddField(
            model_name="endendstudyoutcome",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                db_column="id_unit",
                help_text="UNIT Catalogue",
                limit_choices_to={"taxonomy__code": "UNIT"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="unit_end_endstudy_outcomes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.CreateModel(
            name="ADMEStudyType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="id_pktkade_study_type",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "adme",
                    models.ForeignKey(
                        db_column="id_pktkade",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.adme",
                    ),
                ),
                (
                    "study_type",
                    models.ForeignKey(
                        db_column="id_study_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="studies.studytype",
                    ),
                ),
            ],
            options={
                "verbose_name": "ADME Study Type",
                "verbose_name_plural": "ADME Study Types",
                "db_table": "PKTK_STUDY_TYPE",
            },
        ),
        migrations.AddField(
            model_name="adme",
            name="study_source",
            field=models.ForeignKey(
                blank=True,
                db_column="id_study_source",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_source_admes",
                to="studies.studysource",
            ),
        ),
        migrations.AddField(
            model_name="adme",
            name="testing_method",
            field=models.ForeignKey(
                blank=True,
                db_column="assay_system_endpoint",
                help_text="for ex.: in silico, in vitro, in vivo, human study etc.",
                limit_choices_to={"taxonomy__code": "TEST_TYPE"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="testing_method_admes",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AddConstraint(
            model_name="outcomepopulation",
            constraint=models.UniqueConstraint(
                fields=("outcome", "population"), name="unique_outcome_population"
            ),
        ),
    ]
