# Generated by Django 4.2.13 on 2024-06-09 20:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("taxonomies", "0001_initial"),
        ("novel_food", "0001_initial"),
    ]

    operations = [
        migrations.AlterField(
            model_name="backgroundexposureassessment",
            name="comp_of_interest",
            field=models.ForeignKey(
                blank=True,
                db_column="id_comp_of_interest",
                help_text="Compound of interest (PARAM vocab)",
                limit_choices_to={"taxonomy__code": "PARAM"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="comp_of_interest_bg_expo_assessments",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="regulation",
            field=models.ForeignKey(
                blank=True,
                db_column="id_regulation",
                help_text="(LEGREF vocab)",
                limit_choices_to={"taxonomy__code": "LEGREF"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="chemical",
            name="catalogue_identity",
            field=models.ForeignKey(
                blank=True,
                help_text="(PARAM vocab)",
                limit_choices_to={"taxonomy__code": "PARAM"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="catalogue_identity_chemicals",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="hbgv",
            name="substance",
            field=models.ForeignKey(
                blank=True,
                db_column="id_substance",
                help_text="(PARAM vocab)",
                limit_choices_to={"taxonomy__code": "PARAM"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="substance_hbgvs",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="hbgv",
            name="type",
            field=models.ForeignKey(
                blank=True,
                db_column="id_type",
                help_text="(ENDPOINT_HGV vocab)",
                limit_choices_to={"taxonomy__code": "ENDPOINT_HGV"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="type_hbgvs",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="antinutritional_factors",
            field=models.ForeignKey(
                blank=True,
                db_column="id_antinutritional_factors",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="antinutritional_factors_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="Antinutritional factors",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="carcinogenicity",
            field=models.ForeignKey(
                blank=True,
                db_column="id_is_carcinogenic",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="carcinogenicity_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="Carcinogenicity",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="catalogue_identity",
            field=models.ForeignKey(
                blank=True,
                db_column="id_rms_efsa",
                help_text="(PARAM vocab)",
                limit_choices_to={"taxonomy__code": "PARAM"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="catalogue_identity_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="endocrine_disrupt_prop",
            field=models.ForeignKey(
                blank=True,
                db_column="id_has_endocrine_disrupt_prop",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="endocrine_disrupt_prop_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="has endocrine disrupt properties",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="food_matrices",
            field=models.ForeignKey(
                blank=True,
                db_column="id_is_food_matrices",
                help_text="Were food matrices provided? (YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="food_matrices_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="instability_concerns",
            field=models.ForeignKey(
                blank=True,
                db_column="id_instability_concerns",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instability_concerns_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="mutagenicity",
            field=models.ForeignKey(
                blank=True,
                db_column="id_is_mutagenic",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="mutagenicity_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="Mutagenicity",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="outcome",
            field=models.ForeignKey(
                blank=True,
                db_column="id_outcome",
                help_text="(POSNEG vocab)",
                limit_choices_to={"taxonomy__code": "POSNEG"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="outcome_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="protein_digestibility",
            field=models.ForeignKey(
                blank=True,
                db_column="id_protein_digestibility",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="protein_digestibility_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="Protein digestibility",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="shelflife_unit",
            field=models.ForeignKey(
                blank=True,
                db_column="id_shelflife_unit",
                help_text="(UNIT vocab)",
                limit_choices_to={"taxonomy__code": "UNIT"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="shelflife_unit_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="sufficient_data",
            field=models.ForeignKey(
                blank=True,
                db_column="id_is_sufficient_data",
                help_text="Were sufficient data provided? (YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sufficient_data_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="novelfood",
            name="tox_study_required",
            field=models.ForeignKey(
                blank=True,
                db_column="id_tox_study_required",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="tox_study_required_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="Tox study required",
            ),
        ),
        migrations.AlterField(
            model_name="novelfoodorganism",
            name="has_qps",
            field=models.ForeignKey(
                blank=True,
                help_text="Has qualified presumption of safety? (YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="has_qps_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="has QPS",
            ),
        ),
        migrations.AlterField(
            model_name="novelfoodorganism",
            name="is_gmo",
            field=models.ForeignKey(
                blank=True,
                help_text="Was the organism genetically modified? or in case of cell culture, "
                "was the cell culture modified? (YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="is_gmo_novel_foods",
                to="taxonomies.taxonomynode",
                verbose_name="is GMO",
            ),
        ),
        migrations.AlterField(
            model_name="novelfoodorganism",
            name="org_part",
            field=models.ForeignKey(
                blank=True,
                help_text="(MTX vocab)",
                limit_choices_to={"taxonomy__code": "MTX"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="org_part_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="nutritionaldisadvantage",
            name="yes_no",
            field=models.ForeignKey(
                blank=True,
                db_column="is_yn",
                help_text="(YESNO vocab)",
                limit_choices_to={"taxonomy__code": "YESNO"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="yes_no_nutritional_disadvantages",
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="organism",
            name="organism_node",
            field=models.ForeignKey(
                blank=True,
                help_text="(MTX vocab)",
                limit_choices_to={"taxonomy__code": "MTX"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="taxonomies.taxonomynode",
            ),
        ),
        migrations.AlterField(
            model_name="substanceofconcernnovelfood",
            name="substance_of_concern",
            field=models.ForeignKey(
                blank=True,
                db_column="id_sub_of_concern",
                help_text="(PARAM vocab)",
                limit_choices_to={"taxonomy__code": "PARAM"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="substance_of_concern_substance_of_concern_novel_foods",
                to="taxonomies.taxonomynode",
            ),
        ),
    ]
